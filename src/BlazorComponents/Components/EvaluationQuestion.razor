@using BlazorShared.Models

<MudGrid>
  
<MudItem xs="4" lg="4">


       @if(AnswerType is SingleAnswer singleAnswer)
        {
            <MudTextField T="string" Label="@Question"  @bind-Value="@singleAnswer.Answer" @onchange="OnChange" Margin="Margin.Dense"/>
        }

        @if(AnswerType is Criteria criteriaAnswer)
        {
            <MudField Label="@Question" Variant="Variant.Text" InnerPadding = "false" DisableUnderLine = "true">
                <MudRadioGroup T="Assessment" @bind-SelectedOption="@criteriaAnswer.SelfAssessment" @onchange="OnChange">
                    <MudRadio Option="Assessment.NotApplicable" Color="Color.Primary">NotApplicable </MudRadio>
                    <MudRadio Option="Assessment.DoNotComply" Color="Color.Primary">DoNotComply </MudRadio>
                    <MudRadio Option="Assessment.PartiallyComply" Color="Color.Primary">PartiallyComply </MudRadio>
                    <MudRadio Option="Assessment.FullyComply" Color="Color.Primary">FullyComply </MudRadio>
                </MudRadioGroup>
            </MudField>
        }



       @if(AnswerType is YesNoAnswer yesNoAnswer)
        {
            <MudField Label="@Question" Variant="Variant.Text" InnerPadding = "false" DisableUnderLine = "true">
                <MudRadioGroup T="YesNoEnum" @bind-SelectedOption="@yesNoAnswer.Answer" @onchange="OnChange">
                    <MudRadio Option="YesNoEnum.Yes" Color="Color.Primary">Yes </MudRadio>
                     <MudRadio Option="YesNoEnum.No" Color="Color.Primary">No</MudRadio>
                </MudRadioGroup>
            </MudField>
        }



       @if(AnswerType is MultipleChoice multipleChoiceAnswer)
        {
            <MudSelect T="string" Label="@Question" AnchorOrigin="Origin.BottomCenter" @bind-Text="@multipleChoiceAnswer.Answer"  @bind-Value="@multipleChoiceAnswer.Answer">
                @foreach (var item in multipleChoiceAnswer.Choices)
                {
                    <MudSelectItem Value="@item" />
                }
            </MudSelect>
        }
 </MudItem>
 <MudItem xs="8" lg="8">
     <MudTextField T="string" Label="Answer/Notes" Variant="Variant.Outlined" @bind-Value="@AnswerType.AnswerMotivation" Lines="1" />
 </MudItem>
 </MudGrid>
 <MudDivider DividerType="DividerType.Middle" Class="my-1"/>
@code {

    [Parameter]
    public string Question { get; set; }

    [Parameter]
    public AnswerFormat AnswerType { get; set; }



     [Parameter] public EventCallback<object> ValueChanged { get; set; }

        async void OnChange(ChangeEventArgs e)
    {
       await ValueChanged.InvokeAsync(e.Value);
    }




}
